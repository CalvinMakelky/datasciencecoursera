getwd()
download.file("specdata.zip")
unzip("specdata.zip", exdir= "dataset")
data_set<- "specdata"
download.file(data_set,"specdata.zip")
unzip("specdata.zip", exdir= "dataset")
data_set<- "https://d396qusza40orc.cloudfront.net/rprog%2Fdata%2Fspecdata.zip"
download.file(data_set,"specdata.zip")
unzip("specdata.zip", exdir= "specdata")
list.files("specdata")
num1<-read.csv("001.csv")
num1<-read.csv("specdata/001.csv")
num1<-read.csv("specdata/001.csv")
head(num1)
list.files("specdata")
files <- list.files("specdata")
files
files
files[1]
files[1:332]
files_full <- list.files("specdata", full.names=TRUE)
files_full
head(read.csv(files_full[3]))
dataset<-data.frame()
for (i in 1:332) {
dataset <- rbind(dataset,read.csv(files_full[i]))
}
dataset
mean(dataset$sulfate)
mean(dataset$sulfate, na.rm=TRUE)
sulfatemean <- function("specdata","sulfate", id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dataset <- data.frame()
for (i in 1:332)
dataset <- rbind(dataset, read.csv(files_list[i]))
}
mean(dataset[,"sulfate"], na.rm=TRUE)
}
pollutantmean <- function("specdata","sulfate"){
files_list <- list.files("specdata", full.names=TRUE)
dataset <- data.frame()
for (i in 1:332)
dataset <- rbind(dataset, read.csv(files_list[i]))
}
dat_subset <-dataset[which(datset[, "sulfate"] == sulfate),]
mean(dat_subset[,"sulfate"], na.rm=TRUE)
}
pollutantmean <- function("specdata", pollutant, id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in id)
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <-dat[which(dat[, "Pollutant"] == pollutant),]
mean(dat_subset[,"sulfate"], na.rm=TRUE)
}
pollutantmean <- function("specdata", pollutant, id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in id)
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <-dat[which(dat[, "Pollutant"] == pollutant),]
mean(dat_subset[,"sulfate"], na.rm=TRUE)
}
pollutantmean("sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function("specdata", pollutant, id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
pollutantmean <- function("specdata", pollutant, id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
pollutantmean("specdata","sulfate", 1:10)
pollutantmean <- function("specdata", pollutant){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
?function
pollutantmean <- function(directory, pollutant, id=1:332){
files_list <- list.files("specdata", full.names=TRUE)
dat <- data.frame()
for (i in 1:332){
dat <- rbind(dat, read.csv(files_list[i]))
}
dat_subset <-dat[which(dat[, "Pollutant"] == pollutant),]
mean(dat_subset[,"sulfate"], na.rm=TRUE)
}
pollutantmean("specdata","sulfate", 1:10)
source("pollutantmean.R")
pollutantmean <- function( directory, pollutant, id=332) {
allFiles <- list.files(path = directory, full.names = TRUE)
selectedData <- data.frame()
for (i in id) {
selectedData <- rbind(selectedData, read.csv(allFiles[i]))
}
if (pollutant == 'sulfate') {
mean(selectedData$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(selectedData$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate", 1:10)
pollutantmean <- function( directory, pollutant, id=332) {
allFiles <- list.files(path = directory, full.names = TRUE)
dataset <- data.frame()
for (i in id) {
dataset <- rbind(dataset, read.csv(allFiles[i]))
}
if (pollutant == 'sulfate') {
mean(dataset$sulfate, na.rm = TRUE)
} else if (pollutant == 'nitrate') {
mean(dataset$nitrate, na.rm = TRUE)
}
}
pollutantmean("specdata","sulfate", 1:10)
complete <- function(directory, id=332) {
allfiles <- list.files(path=directory, full.names=TRUE)
dataset <- data.frame()
completeCases <- data.frame()
for ( i in id) {
dataset <- (read.csv(allfiles[i], header=TRUE))
nobs <- sum(complete.cases(datset))
completeCases <- rbind(completeCases, data.frame(i,nobs))
}
completeCases
}
complete("specdata", 1)
complete <- function(directory, id=332) {
allfiles <- list.files(path=directory, full.names=TRUE)
dataset <- data.frame()
completeCases <- data.frame()
for ( i in id) {
dataset <- (read.csv(allfiles[i], header=TRUE))
nobs <- sum(complete.cases(dataset))
completeCases <- rbind(completeCases, data.frame(i,nobs))
}
completeCases
}
complete("specdata", 1)
corr <- function(directory, threshold=0) {
source("complete.R")
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
}
summary(cr)
cr <- corr("specdata", 150)
summary(cr)
head(cr)
source("corr.R")
corr <- function(directory, threshold=0) {
source("complete.R")
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
}
cr <- corr("specdata", 150)
summary(cr)
corr <- function(directory, threshold = 0) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'threshold' is a numeric vector of length 1 indicating the
## number of completely observed observations (on all
## variables) required to compute the correlation between
## nitrate and sulfate; the default is 0
## Return a numeric vector of correlations
source("complete.R")
completeCases <- complete(directory)
casesAboveThreshold <- completeCases[completeCases$nobs > threshold,1]
allFiles <- list.files(path = directory, full.names = TRUE)
correlations <- rep(NA,length(casesAboveThreshold))
for (i in casesAboveThreshold) {
fileData <- (read.csv(allFiles[i]))
completeCases <- complete.cases(fileData)
validSulfateData <- fileData[completeCases, 2]
validNitrateData <- fileData[completeCases, 3]
correlations[i] <- cor(x = validSulfateData, y = validNitrateData)
#print(head(fileData[completeCases,]))
#print(validSulfateData)
#print(validNitrateData)
}
correlations <- correlations[complete.cases(correlations)]
}
cr <- corr("specdata", 150)
head(cr)
corr <- function(directory, threshold = 0) {
files <- list.files(directory, full.names = TRUE);
correlationList <- c();
index <- 1;
while (index <= length(files)) {
completeCases <- complete(directory, index);
if (completeCases$nobs > threshold) {
data <- read.csv(files[index], comment.char = "");
correlationList <- c(correlationList, cor(data$sulfate, data$nitrate, use = "complete.obs"));
}
index <- index + 1;
}
correlationList;
}
cr<-corr("specdata",150)
head(cr)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
[1]
1
submit()
1
submit(manual=TRUE)
getwd()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
submit()
if(sid == "pollutantmean-1") {
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
}
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("corr.R")
submit()
submit(manual=TR)
submit(manual=TRUE)
2
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
ls()
getwd()
submit(manual=TRUE)
file.choose(corr.R)
source("corr.R")
corr.R
"corr.R"
file.choose("coor.R")
submit()
source('C:/Users/CJ/Desktop/Coursera/corr.R')
Error in file(file, "rt") : cannot open the connection
In addition: Warning message:
submit()
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
submit()
submit()
submit()
corr <- function(directory, threshold = 0) {
files <- list.files(directory, full.names = TRUE);
correlationList <- c();
index <- 1;
while (index <= length(files)) {
completeCases <- complete(directory, index);
if (completeCases$nobs > threshold) {
data <- read.csv(files[index], comment.char = "");
correlationList <- c(correlationList, cor(data$sulfate, data$nitrate, use = "complete.obs"));
}
index <- index + 1;
}
correlationList;
}
submit()
getwd()
submit()
submit()
submit()
submit()
submit()
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
submit()
source("submitscript1.R")
submit()
submit()
corr <- function(directory, threshold = 0) {
# read all files from the directory specified and get all complete cases
datafiles <- list.files(directory, pattern="*.csv", full.names=TRUE)
my_data <- lapply(datafiles, read.csv)
my_data <- do.call(rbind, my_data)
my_data <- my_data[complete.cases(my_data), ]
## create vector to hold results
v <- numeric()
## get total complete cases per id
for (j in 1:length(datafiles)) {
data <- subset(my_data, my_data[,4]==j)
numrows <- nrow(data)
## if total > threshold
## calculate correlation between sulfate and nitrate
if (numrows > threshold) {
c <- cor(data$sulfate, data$nitrate)
c <- round(c, digits=4)
## add results to vector
v <- c(v, c)
}
}
return(v)
}
submit()
